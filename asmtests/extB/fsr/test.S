# RISC-V Bit Manipulation Instruction Support
#
# Copyright (c) 2019, Imperas Software Ltd. Additions
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#      * Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#      * Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in the
#        documentation and/or other materials provided with the distribution.
#      * the name of Imperas Software Ltd. nor the
#        names of its contributors may be used to endorse or promote products
#        derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Codasip Ltd., Imperas Software Ltd.
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
.include "extB.S.include"

# use s0(r8)  - s1(r9)
# use s2(r18) - s11(r27)

# reg = rs1, rs3
# rd = rotr(reg, rs2)
#      s2 s3  s4  s5
#      18 19  20  21
# FSR rd rs1 rs2 rs3
.macro test_FSR imm1 imm2 imm3
    WRITE_LOG_N str1
    WRITE_S sep
    li s2, 0
    li s3, \imm1
    li s4, \imm2
    li s5, \imm3
    FSR 18 19 20 21
    WRITE_RAW s3
    WRITE_S op
    WRITE_RAW s4
    WRITE_S op
    WRITE_RAW s5
    WRITE_S gives
    WRITE_RAW s2
    WRITE_NL
.endm

START_TEST:
    test_FSR 0x00000000 0x00000000 0x00000000

    test_FSR 0x80000001 0x00000000 0x00000001
    test_FSR 0x80000001 0x00000001 0x00000001
    test_FSR 0x80000001 0x00000002 0x00000001
    test_FSR 0x80000001 0x00000003 0x00000001
    test_FSR 0x80000001 0x00000004 0x00000001
    test_FSR 0x80000001 0x00000005 0x00000001
    test_FSR 0x80000001 0x00000006 0x00000001
    test_FSR 0x80000001 0x00000007 0x00000001
    test_FSR 0x80000001 0x00000008 0x00000001
    test_FSR 0x80000001 0x00000009 0x00000001
    test_FSR 0x80000001 0x0000000A 0x00000001
    test_FSR 0x80000001 0x0000000B 0x00000001
    test_FSR 0x80000001 0x0000000C 0x00000001
    test_FSR 0x80000001 0x0000000D 0x00000001
    test_FSR 0x80000001 0x0000000E 0x00000001
    test_FSR 0x80000001 0x0000000F 0x00000001

    test_FSR 0x80000001 0x00000010 0x00000001
    test_FSR 0x80000001 0x00000011 0x00000001
    test_FSR 0x80000001 0x00000012 0x00000001
    test_FSR 0x80000001 0x00000013 0x00000001
    test_FSR 0x80000001 0x00000014 0x00000001
    test_FSR 0x80000001 0x00000015 0x00000001
    test_FSR 0x80000001 0x00000016 0x00000001
    test_FSR 0x80000001 0x00000017 0x00000001
    test_FSR 0x80000001 0x00000018 0x00000001
    test_FSR 0x80000001 0x00000019 0x00000001
    test_FSR 0x80000001 0x0000001A 0x00000001
    test_FSR 0x80000001 0x0000001B 0x00000001
    test_FSR 0x80000001 0x0000001C 0x00000001
    test_FSR 0x80000001 0x0000001D 0x00000001
    test_FSR 0x80000001 0x0000001E 0x00000001
    test_FSR 0x80000001 0x0000001F 0x00000001

    test_FSR 0x80000001 0x00000020 0x00000001
    test_FSR 0x80000001 0x00000021 0x00000001
    test_FSR 0x80000001 0x00000022 0x00000001
    test_FSR 0x80000001 0x00000023 0x00000001
    test_FSR 0x80000001 0x00000024 0x00000001
    test_FSR 0x80000001 0x00000025 0x00000001
    test_FSR 0x80000001 0x00000026 0x00000001
    test_FSR 0x80000001 0x00000027 0x00000001
    test_FSR 0x80000001 0x00000028 0x00000001
    test_FSR 0x80000001 0x00000029 0x00000001
    test_FSR 0x80000001 0x0000002A 0x00000001
    test_FSR 0x80000001 0x0000002B 0x00000001
    test_FSR 0x80000001 0x0000002C 0x00000001
    test_FSR 0x80000001 0x0000002D 0x00000001
    test_FSR 0x80000001 0x0000002E 0x00000001
    test_FSR 0x80000001 0x0000002F 0x00000001

    test_FSR 0x80000001 0x00000030 0x00000001
    test_FSR 0x80000001 0x00000031 0x00000001
    test_FSR 0x80000001 0x00000032 0x00000001
    test_FSR 0x80000001 0x00000033 0x00000001
    test_FSR 0x80000001 0x00000034 0x00000001
    test_FSR 0x80000001 0x00000035 0x00000001
    test_FSR 0x80000001 0x00000036 0x00000001
    test_FSR 0x80000001 0x00000037 0x00000001
    test_FSR 0x80000001 0x00000038 0x00000001
    test_FSR 0x80000001 0x00000039 0x00000001
    test_FSR 0x80000001 0x0000003A 0x00000001
    test_FSR 0x80000001 0x0000003B 0x00000001
    test_FSR 0x80000001 0x0000003C 0x00000001
    test_FSR 0x80000001 0x0000003D 0x00000001
    test_FSR 0x80000001 0x0000003E 0x00000001
    test_FSR 0x80000001 0x0000003F 0x00000001

    test_FSR 0x80000001 0x00000040 0x00000001
    test_FSR 0x80000001 0x00000041 0x00000001
    test_FSR 0x80000001 0x00000042 0x00000001
    test_FSR 0x80000001 0x00000043 0x00000001
    test_FSR 0x80000001 0x00000044 0x00000001
    test_FSR 0x80000001 0x00000045 0x00000001
    test_FSR 0x80000001 0x00000046 0x00000001
    test_FSR 0x80000001 0x00000047 0x00000001
    test_FSR 0x80000001 0x00000048 0x00000001
    test_FSR 0x80000001 0x00000049 0x00000001
    test_FSR 0x80000001 0x0000004A 0x00000001
    test_FSR 0x80000001 0x0000004B 0x00000001
    test_FSR 0x80000001 0x0000004C 0x00000001
    test_FSR 0x80000001 0x0000004D 0x00000001
    test_FSR 0x80000001 0x0000004E 0x00000001
    test_FSR 0x80000001 0x0000004F 0x00000001

    EXIT_TEST

str1:
    .string "Testing FSR"

sep:
    .string " "

gives:
    .string " => "

op:
    .string " (OP) "
