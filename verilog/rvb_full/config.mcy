[options]
size 800
weight_pq_s 500
weight_pq_ms 500
weight_cover 500
pick_cover_prcnt 90
tags COVERED UNCOVERED PROBE GAP NOC

[script]
read_verilog -defer rvb_pcpi.v
read_verilog -defer rvb_full.v
read_verilog -defer ../rvb_bextdep/rvb_bextdep.v
read_verilog -defer ../rvb_bitcnt/rvb_bitcnt.v
read_verilog -defer ../rvb_bmatxor/rvb_bmatxor.v
read_verilog -defer ../rvb_clmul/rvb_clmul.v
read_verilog -defer ../rvb_crc/rvb_crc.v
read_verilog -defer ../rvb_shifter/rvb_shifter.v
read_verilog -defer ../rvb_simple/rvb_simple.v
synth -flatten -top rvb_pcpi

[files]
rvb_pcpi.v
rvb_full.v
../rvb_bextdep/rvb_bextdep.v
../rvb_bitcnt/rvb_bitcnt.v
../rvb_bmatxor/rvb_bmatxor.v
../rvb_clmul/rvb_clmul.v
../rvb_crc/rvb_crc.v
../rvb_shifter/rvb_shifter.v
../rvb_simple/rvb_simple.v

[logic]
if result("sim") == "FAIL":
    tag("COVERED")
    if rng(100) < 20:
        tag("PROBE")
        if result("bmc") != "FAIL":
            tag("GAP")
    return

if result("bmc") == "FAIL":
    tag("UNCOVERED")
    return

tag("NOC")

[report]
if tags("!NOC"):
    print("Coverage: %.2f%%" % (100.0*tags("COVERED")/tags("!NOC")))
if tags():
    print("Noc percentage: %.2f%%" % (100.0*tags("NOC")/tags()))
if tags("PROBE"):
    print("Gap percentage: %.2f%%" % (100.0*tags("GAP")/tags("PROBE")))

[test sim]
maxbatchsize 10
expect PASS FAIL
run bash $PRJDIR/sim.sh

[test bmc]
expect TIMEOUT PASS FAIL
run bash $PRJDIR/bmc.sh
